local function spine_callback(self, node, event, data)
    --pprint("SPINE CALLBACK", node, event, data)
end

local bone_names = {
        "spine/root",
        "spine/hip",
        "spine/aim-constraint-target",
        "spine/rear-thigh",
        "spine/rear-shin",
        "spine/rear-foot",
        "spine/back-foot-tip",
        "spine/torso",
        "spine/torso2",
        "spine/torso3",
        "spine/front-shoulder",
        "spine/front-upper-arm",
        "spine/front-bracer",
        "spine/front-fist",
        "spine/back-shoulder",
        "spine/rear-upper-arm",
        "spine/rear-bracer",
        "spine/gun",
        "spine/gun-tip",
        "spine/muzzle",
        -- "spine/muzzle-ring",
        -- "spine/muzzle-ring2",
        -- "spine/muzzle-ring3",
        -- "spine/muzzle-ring4",
        "spine/neck",
        "spine/head",
        "spine/hair1",
        "spine/hair2",
        "spine/hair3",
        "spine/hair4",
        "spine/head-control",
        "spine/front-thigh",
        "spine/front-shin",
        "spine/front-foot",
        "spine/front-foot-tip"
        -- "spine/crosshair",
        -- "spine/rear-foot-target",
        -- "spine/rear-leg-target",
        -- "spine/board-ik",
        -- "spine/clipping",
        -- "spine/hoverboard-controller",
        -- "spine/exhaust1",
        -- "spine/exhaust2",
        -- "spine/exhaust3",
        -- "spine/hoverboard-thruster-front",
        -- "spine/hoverglow-front",
        -- "spine/hoverboard-thruster-rear",
        -- "spine/hoverglow-rear",
        -- "spine/side-glow1",
        -- "spine/side-glow2",
        -- "spine/portal-root",
        -- "spine/flare1",
        -- "spine/flare10",
        -- "spine/flare2",
        -- "spine/flare3",
        -- "spine/flare4",
        -- "spine/flare5",
        -- "spine/flare6",
        -- "spine/flare7",
        -- "spine/flare8",
        -- "spine/flare9",
        -- "spine/portal",
        -- "spine/portal-shade",
        -- "spine/portal-streaks1",
        -- "spine/portal-streaks2",
        -- "spine/front-foot-target",
        -- "spine/front-leg-target"
    }


local function clone_node(node)
    local nodes = gui.clone_tree(node)
    for id, cloned_node in pairs(nodes) do
        gui.set_id(cloned_node, id)
    end
    return nodes
end

function init(self)
    print("HELLO FROM GUI!")
    self.n = gui.get_node("spine")
    gui.play_spine_anim(self.n, "walk", gui.PLAYBACK_LOOP_FORWARD, {}, spine_callback)
    gui.set_spine_playback_rate(self.n, 0.5)

    local pos = gui.get_position(self.n)
    pos.x = pos.x - 300
    pos.y = pos.y - 50

    print("gui.get_spine_skin", gui.get_spine_skin(self.n))
    print("gui.get_spine_animation", gui.get_spine_animation(self.n))
    print("gui.get_spine_cursor", gui.get_spine_cursor(self.n))
    print("gui.get_spine_playback_rate", gui.get_spine_playback_rate(self.n))
    print("gui.get_spine_scene", gui.get_spine_scene(self.n))

    gui.set_spine_attachment(self.n, "mouth", "mouth-grind")
    
    -- bones
    local bone_sprite = gui.get_node("bone")

    for i, bone_id in ipairs(bone_names) do

        local bone = gui.get_spine_bone(self.n, string.sub(bone_id,7))
        local bone_sprite_clone = gui.clone(bone_sprite)

        gui.set_parent(bone_sprite_clone, bone)
    end

    --get bone from clone
    self.n1 = gui.get_node("box")
    gui.set_enabled(self.n1, false)
    timer.delay(0.1, false, function()
        local clones = clone_node(self.n1)
        local cloned_node = clones[hash("spine1")]
        gui.set_enabled(clones[hash("box")], true)
        gui.get_spine_bone(cloned_node, "aim-constraint-target")
    end)
    
    -- set spine scene for cloned node with less bones
    timer.delay(0.2, false, function()
        local clones = clone_node(self.n1)
        local cloned_node = clones[hash("spine1")]
        gui.set_enabled(clones[hash("box")], true)
        gui.set_spine_scene(cloned_node, "squirrel")
        gui.play_spine_anim(cloned_node, hash("idle"), gui.PLAYBACK_LOOP_FORWARD)
    end)

    -- set model with more bones into node with less bones
    self.less_bones_spine = gui.get_node("squirrel")
    gui.set_spine_scene(self.less_bones_spine, "spineboy") -- spinemodel with more bones
end

function update(self, dt)
    --print("gui.get_spine_cursor", gui.get_spine_cursor(self.n))
end

function on_message(self, message_id, message, sender)
end

function on_input(self, action_id, action)
end


